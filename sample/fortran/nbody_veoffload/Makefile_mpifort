#-----------------------------------------------------------------------
#   Configuration of compile
#-----------------------------------------------------------------------
# Variables that must be specified by users
# (i) Variables related to FDPS
FDPS_LOC = ../../../src
FDPS_INC = -I$(FDPS_LOC) -I$(FDPS_LOC)/c_interface/headers
FDPS_FTN_MOD_DIR = $(FDPS_LOC)/fortran_interface/modules
FDPS_FTN_IF_GENERATOR = ../../../scripts/gen_ftn_if_veo.py

# (ii) Variables to specify compilers and compile options
# Serial or OpenMP cases
#FC=gfortran
#CXX=g++
# MPI case
FC=/usr/mpi/gcc/openmpi-4.0.3rc4/bin/mpifort
CXX=/usr/mpi/gcc/openmpi-4.0.3rc4/bin/mpic++
# [Option 1] w/o optimization
# [Option 2] w/ optimization 
FCFLAGS = -std=f2003 -O3 -ffast-math -funroll-loops -finline-functions
CXXFLAGS = -std=c++11 -O3 -ffast-math -funroll-loops $(FDPS_INC)
#LDFLAGS = -L/opt/intel/lib/intel64 -L/usr/lib64 -lifport -lifcore -limf -lsvml -lm -lipgo -lirc -lirc_s
LDFLAGS = -lgfortran
# OpenMP options
FCFLAGS  += -DPARTICLE_SIMULATOR_THREAD_PARALLEL -fopenmp
CXXFLAGS += -DPARTICLE_SIMULATOR_THREAD_PARALLEL -fopenmp
# MPI options
FCFLAGS  += -DPARTICLE_SIMULATOR_MPI_PARALLEL
CXXFLAGS += -DPARTICLE_SIMULATOR_MPI_PARALLEL
CXXFLAGS += -D_SX_VEOFFLOAD 
#CXXFLAGS += -D_SXDEBUG
CXXFLAGS += -I/opt/nec/ve/veos/include

# fdps-autotest-set-vars (DO NOT CHANGE THIS LINE)

PG_ROOT  = 
SRC_PG   = 
OBJ_PG   = 
PG_BUILD =
PG_CLEAN = 

#-----------------------------------------------------------------------
#   Source files
#-----------------------------------------------------------------------
%.o : %.F90
	$(FC) $(FCFLAGS) -c $<
%.o : %.cpp
	$(CXX) $(CXXFLAGS) -c $<

SRC_USER_DEFINED_TYPE = user_defined.F90
SRC_USER = f_main.F90
SRC_FDPS_MOD = $(wildcard $(FDPS_FTN_MOD_DIR)/*.F90)
SRC_FTN = $(SRC_FDPS_MOD) \
	  $(SRC_USER_DEFINED_TYPE) \
	  FDPS_module.F90 \
	  $(SRC_USER)
SRC_CXX = FDPS_ftn_if.cpp \
	  FDPS_Manipulators.cpp \
	  main.cpp

OBJ_USER_DEFINED_TYPE	= $(SRC_USER_DEFINED_TYPE:F90=o)
OBJ_USER		= $(SRC_USER:F90=o)
OBJ_FDPS_MOD		= $(notdir $(SRC_FDPS_MOD:F90=o))
OBJ_FTN			= $(notdir $(SRC_FTN:F90=o))
OBJ_CXX			= $(SRC_CXX:cpp=o)
OBJ			= $(OBJ_FTN) $(OBJ_CXX) $(OBJ_PG)

VPATH = $(FDPS_FTN_MOD_DIR) $(PG_ROOT)
TARGET = nbody_mpi.out
TARGET_VELIB = libvenbody.so

$(TARGET): $(OBJ) $(TARGET_VELIB) result
	$(PG_BUILD)
	$(CXX) $(OBJ) $(CXXFLAGS) -o $(TARGET) $(LDFLAGS) -L/opt/nec/ve/veos/lib64 -Wl,-rpath=/opt/nec/ve/veos/lib64 -lveo

$(TARGET_VELIB):
	cd ../nbody_velib/;make -f Makefile_nfort;cd -
	cp ../nbody_velib/$(TARGET_VELIB) .

result:
	mkdir -p result

$(SRC_CXX) FDPS_module.F90: $(SRC_USER_DEFINED_TYPE)
	$(FDPS_FTN_IF_GENERATOR) $(SRC_USER_DEFINED_TYPE) --output ./ 

FDPS_super_particle.o: FDPS_vector.o FDPS_matrix.o

$(OBJ_USER_DEFINED_TYPE): $(OBJ_FDPS_MOD) $(OBJ_PG)

FDPS_module.o: $(OBJ_USER_DEFINED_TYPE)

$(OBJ_USER): $(OBJ_USER_DEFINED_TYPE) FDPS_module.o

clean:
	rm -f *.o *.s *.mod $(TARGET) *.dat *.so
	rm -f $(SRC_CXX) FDPS_Manipulators.h  FDPS_module.F90 user_defined.hpp 
	rm -rf result
	cd ../nbody_velib/;make -f Makefile_nfort clean;cd -

distclean: clean
	$(PG_CLEAN)
	rm -f $(SRC_CXX) FDPS_Manipulators.h  FDPS_module.F90 user_defined.hpp 
	rm -rf result

# fdps-autotest-run (DO NOT CHANGE THIS LINE)
